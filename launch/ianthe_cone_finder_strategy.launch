<launch>
	<arg name="doDebug" default="false" />
	<arg if="$(arg doDebug)" name="launchPrefix" value="xterm -e gdb -args" />
	<arg unless="$(arg doDebug)" name="launchPrefix" value="" />

	<arg name="cmd_vel_topic_name" default="/cmd_vel" doc="cmd_vel topic name" />
	<arg name="cone_detector_topic_name" default="/cone_detector" doc="cone_detector topic name" />
	<arg name="image_topic_name" default="/usb_cam/image_raw" doc="topic name published by camera" />
	<arg name="show_debug_windows" default="true" doc="true => show parameter window for cone detector" />

	<arg name="doMotor" default="false" doc="true =>enable motors" />

	<node name="usb_cam" pkg="usb_cam" type="usb_cam_node" output="screen" >
      	<param name="video_device" value="/dev/video0" />
		<param name="image_width" value="640" />
		<param name="image_height" value="480" />
		<param name="pixel_format" value="yuyv" />
		<param name="camera_frame_id" value="usb_cam" />
		<param name="io_method" value="mmap"/>
	</node>


	<include file="$(find victoria_perception)/launch/cone_detector.launch">
		<arg name="image_transport" value="compressed" />
		<arg name="image_topic_name" value="$(arg image_topic_name)" />
		<arg name="show_debug_windows" value="$(arg show_debug_windows)" />
    </include>

  <node pkg="victoria_navigation" name="cone_finder_strategy_node" type="cone_finder_strategy_node" respawn="false" output="screen" launch-prefix="$(arg launchPrefix)" >
  	<param name="cmd_vel_topic_name" value="$(arg cmd_vel_topic_name)" />
  	<param name="cone_detector_topic_name" value="$(arg cone_detector_topic_name)" />
  </node>

    <node if="$(arg doMotor)" pkg="farryn_controller" name="motor_controller_node" type="farryn_controller_node" output="screen">
        <rosparam command="load" file="$(find farryn_controller)/cfg/farryn_controller.yaml"/>
    </node>
</launch>